.text
.globl  _start

start = 0
max = 15

_start:
        mov     x28,start       /* start value */
        mov     w20,0           /* get value 0 */
        add     w26,w20,0x30    /* convert to ascii 0 */

loop:

        // div
        mov     x20, 10         /* use value 10 */
        udiv    x21,x28,x20     /* divide by 10 */
        msub    x22,x20,x21,x28 /* get remainder */

        // modify msg
        add     w23,w21,0x30    /* convert increment to ascii */
        add     w24,w22,0x30    /* convert increment to ascii */
        adr     x25,msg         /* save address of msg in register */
        strb    w24,[x25,7]     /* store byte in msg, offset 6 */

        cmp     w23,w26         /* compare if it is ascii 0 */
        beq     continue        /* skip next instruction if above is ascii 0 */
        strb    w23,[x25,6]     /* store byte in msg, offset 6 */

continue:
        // write
        mov     x2,len          /* length of string */
        adr     x1,msg          /* save address of msg */
        mov     x0,1            /* file descriptor 1 = stdout */
        mov     x8,64           /* syscall 64 = write */
        svc     0

        // loop
        add     x28,x28,1       /* increment register */
        cmp     x28,max         /* check max size */
        bne     loop            /* branch to loop if not equal */

        // exit
        mov     x0,0            /* exit status */
        mov     x8,93           /* syscall 93 = exit */
        svc     0

.data
msg:    .ascii  "Loop:   \n"
len= . - msg
